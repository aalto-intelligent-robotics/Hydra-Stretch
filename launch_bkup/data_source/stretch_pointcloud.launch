<?xml version="1.0"?>
<launch>
  <arg default="true" name="sim_time_required"/>
  <param name="use_sim_time" value="$(arg sim_time_required)"/>
  <arg default="true" name="use_semantics"/>
  <arg default="true" name="use_gt_semantics"/>
  <arg default="$(eval arg('use_gt_semantics') and arg('use_semantics'))" name="use_label_image"/>
  <arg default="astra" name="camera_name"/>
  <arg default="/astra/color/camera_info_proper" if="$(arg use_label_image)" name="rgb_info_topic"/>
  <arg default="/astra/depth_registered/camera_info" name="depth_info_topic"/>
  <arg default="/astra/color/camera_info_proper" name="rgb_info_topic" unless="$(arg use_label_image)"/>
  <arg default="/astra/seg_cam/image_raw" if="$(arg use_label_image)" name="rgb_topic"/>
  <arg default="/astra/color/image_raw" name="rgb_topic" unless="$(arg use_label_image)"/>
  <arg default="/astra/depth_registered/image_rect" name="depth_topic"/>
  <arg default="false" name="use_static_tfs"/>
  <include file="$(find hydra_ros)/launch/utils/includes/uhumans2_static_tfs.xml" if="$(arg use_static_tfs)"/>
  <include file="$(find hydra_ros)/launch/utils/includes/rgbd_to_pointcloud.xml" if="$(eval arg('use_gt_semantics') or not arg('use_semantics'))" pass_all_args="true"/>
  <include file="$(find semantic_recolor)/launch/semantic_recolor_pointcloud.launch" if="$(eval arg('use_semantics') and not arg('use_gt_semantics'))" pass_all_args="true"/>
  <!-- register depth image from astra -->
  <arg default="/astra/depth/camera_info_proper" name="unreg_depth_info_topic"/>
  <arg default="/astra/depth/image_raw" name="unreg_depth_topic"/>
  <arg default="10" name="queue_size"/>
  <arg default="false" name="verbose"/>
  <arg if="$(arg verbose)" name="nodelet_output" value="screen"/>
  <arg name="nodelet_output" unless="$(arg verbose)" value="log"/>
  <node args="load depth_image_proc/register nodelet_manager -no-bond" name="depth_register" output="$(arg nodelet_output)" pkg="nodelet" type="nodelet">
    <param name="queue_size" value="$(arg queue_size)"/>
    <remap from="rgb/camera_info" to="$(arg rgb_info_topic)"/>
    <remap from="depth/camera_info" to="$(arg unreg_depth_info_topic)"/>
    <remap from="depth/image_rect" to="$(arg unreg_depth_topic)"/>
    <remap from="depth_registered/camera_info" to="$(arg camera_name)/depth_registered/camera_info"/>
    <remap from="depth_registered/image_rect" to="$(arg camera_name)/depth_registered/image_rect"/>
  </node>
</launch>
